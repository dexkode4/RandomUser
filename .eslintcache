[{"/Users/macbook/Desktop/RandomUser/src/context/userContext.tsx":"1","/Users/macbook/Desktop/RandomUser/src/components/UserList/index.tsx":"2","/Users/macbook/Desktop/RandomUser/src/components/SummaryCard/index.tsx":"3","/Users/macbook/Desktop/RandomUser/src/components/MainContainer/index.tsx":"4","/Users/macbook/Desktop/RandomUser/src/components/Downloadbutton/index.tsx":"5","/Users/macbook/Desktop/RandomUser/src/components/SearchField/index.tsx":"6","/Users/macbook/Desktop/RandomUser/src/components/Footer/index.tsx":"7","/Users/macbook/Desktop/RandomUser/src/App.tsx":"8"},{"size":2569,"mtime":1613245329715,"results":"9","hashOfConfig":"10"},{"size":1442,"mtime":1613258301016,"results":"11","hashOfConfig":"10"},{"size":1883,"mtime":1613245329713,"results":"12","hashOfConfig":"10"},{"size":389,"mtime":1613255710883,"results":"13","hashOfConfig":"10"},{"size":1637,"mtime":1613245329708,"results":"14","hashOfConfig":"10"},{"size":577,"mtime":1613245329712,"results":"15","hashOfConfig":"10"},{"size":765,"mtime":1613245329709,"results":"16","hashOfConfig":"10"},{"size":2727,"mtime":1613255738788,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"9g2u4w",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/Users/macbook/Desktop/RandomUser/src/context/userContext.tsx",["37"],"import React, { createContext, useState, useMemo } from 'react';\n\nexport interface IData {\n    name: { title: string; first: string; last: string };\n    location: {\n        city: string;\n        coordinates: { latitude: string; longitude: string },\n        street: { name: string, number: number },\n        country: string\n    };\n    picture: { large: string; medium: string; thumbnail: string };\n    email: string,\n    phone: string,\n    login: { uuid: string }\n    dob: { age: number, date: string },\n    registered: { date: string },\n    cell: string,\n    gender: string\n}\ninterface ContextValues {\n    userCategory: string;\n    handleUserCategory: (T: string) => void,\n    handleToggleCountry: () => void;\n    toggleCountry: boolean;\n    page: number,\n    nextPage: () => void,\n    prevPage: () => void,\n    userData: any,\n    handleUserData: (data: IData[]) => void,\n    country: string,\n    handleFilterByCountry: (text: string) => void\n\n}\n\n\nexport const UserContext = createContext<ContextValues | null>(null);\n\ntype Propstype = {\n    children: React.ReactNode\n}\n\n\nexport const UserContextProvider = ({ children }: Propstype) => {\n    const [userCategory, setUserCategory] = useState(\"All Users\");\n    const [toggleCountry, setToggleCountry] = useState(false);\n    const [page, setPage] = useState(1)\n    const [userData, setUserData] = useState<IData[]>([]);\n    const [country, setCountry] = useState(\"\");\n\n    const handleUserCategory = (text: string) => {\n        setUserCategory(text);\n    }\n    const handleFilterByCountry = (text: string) => {\n        setCountry(text);\n    }\n\n    const handleToggleCountry = () => {\n        setToggleCountry(!toggleCountry);\n    }\n\n    const nextPage = () => {\n        setPage(prev => prev + 1)\n    }\n    const prevPage = () => {\n        setPage((prev) => {\n            if (prev <= 1) {\n                return prev\n            }\n            else {\n                return prev - 1\n            }\n        })\n    }\n\n    const handleUserData = (data: IData[]) => {\n        setUserData(data)\n    }\n\n\n    const contextValue = useMemo(\n        () => ({\n            userCategory,\n            handleUserCategory,\n            handleToggleCountry,\n            toggleCountry,\n            page,\n            nextPage,\n            prevPage,\n            userData,\n            handleUserData,\n            country,\n            handleFilterByCountry\n        }),\n        [userCategory, handleUserCategory]\n    );\n\n    return (\n        <UserContext.Provider value={contextValue}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n",["38","39"],"/Users/macbook/Desktop/RandomUser/src/components/UserList/index.tsx",[],"/Users/macbook/Desktop/RandomUser/src/components/SummaryCard/index.tsx",[],"/Users/macbook/Desktop/RandomUser/src/components/MainContainer/index.tsx",[],"/Users/macbook/Desktop/RandomUser/src/components/Downloadbutton/index.tsx",[],"/Users/macbook/Desktop/RandomUser/src/components/SearchField/index.tsx",[],"/Users/macbook/Desktop/RandomUser/src/components/Footer/index.tsx",[],"/Users/macbook/Desktop/RandomUser/src/App.tsx",["40","41","42"],"import React, { useState, useEffect, useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport Header from './components/Header';\nimport PageLayout from './components/PageLayout';\nimport UserDetails from './components/UserDetails';\nimport UserList from './components/UserList';\nimport { getAllUsers, getMaleUsers, getFemaleUsers } from './API'\nimport { UserContext } from './context/userContext';\nimport { IData } from './context/userContext'\n\nfunction App() {\n  const state = useContext(UserContext);\n  const [responseData, setResponseData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (state?.userCategory === 'Female Users') {\n      getFemaleUsers(state?.page).then((res) => {\n        setIsLoading(false)\n        setResponseData(res?.results)\n        state?.handleUserData(res.results)\n\n      }).catch(err => {\n        setIsLoading(false)\n      })\n\n    } else if (state?.userCategory === 'Male Users') {\n      getMaleUsers(state?.page).then((res) => {\n        setIsLoading(false)\n        setResponseData(res?.results)\n        state?.handleUserData(res.results)\n\n      }).catch(err => {\n        setIsLoading(false)\n      })\n    } else {\n      getAllUsers(state?.page).then((res) => {\n        setIsLoading(false)\n        setResponseData(res?.results)\n        state?.handleUserData(res.results)\n\n      }).catch(err => {\n        setIsLoading(false)\n      })\n    }\n  }, [state?.userCategory, state?.page])\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    let responseDataCopy = [...responseData];\n    responseDataCopy = responseDataCopy.filter((user: IData) => {\n      return user.name.first.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        user.name.last.toLowerCase().includes(searchTerm.toLowerCase())\n    }\n    )\n    setResponseData(responseDataCopy)\n  }, [searchTerm])\n\n  useEffect(() => {\n    let responseDataCopy = [...responseData];\n    responseDataCopy = responseDataCopy.filter((user: IData) => user.location.country === state?.country)\n    setResponseData(responseDataCopy)\n  }, [state?.country])\n\n\n  return (\n    <Router>\n      <Route path=\"/\" exact>\n        <PageLayout>\n          <Header handleChange={handleChange} />\n          <UserList data={responseData} isLoading={isLoading} />\n        </PageLayout>\n      </Route>\n\n      <Route path=\"/:userId\" exact>\n        <PageLayout>\n          <Header handleChange={handleChange} />\n          <UserDetails />\n        </PageLayout>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n",{"ruleId":"43","severity":1,"message":"44","line":94,"column":9,"nodeType":"45","endLine":94,"endColumn":43,"suggestions":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"43","severity":1,"message":"51","line":53,"column":6,"nodeType":"45","endLine":53,"endColumn":40,"suggestions":"52"},{"ruleId":"43","severity":1,"message":"53","line":67,"column":6,"nodeType":"45","endLine":67,"endColumn":18,"suggestions":"54"},{"ruleId":"43","severity":1,"message":"53","line":73,"column":6,"nodeType":"45","endLine":73,"endColumn":22,"suggestions":"55"},"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'country', 'handleToggleCountry', 'page', 'toggleCountry', and 'userData'. Either include them or remove the dependency array.","ArrayExpression",["56"],"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["59"],"React Hook useEffect has a missing dependency: 'responseData'. Either include it or remove the dependency array.",["60"],["61"],{"desc":"62","fix":"63"},"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [userCategory, handleToggleCountry, toggleCountry, page, userData, country]",{"range":"70","text":"71"},"Update the dependencies array to be: [state?.userCategory, state?.page, state]",{"range":"72","text":"73"},"Update the dependencies array to be: [responseData, searchTerm]",{"range":"74","text":"75"},"Update the dependencies array to be: [responseData, state?.country]",{"range":"76","text":"77"},[2398,2432],"[userCategory, handleToggleCountry, toggleCountry, page, userData, country]",[1545,1579],"[state?.userCategory, state?.page, state]",[2040,2052],"[responseData, searchTerm]",[2270,2286],"[responseData, state?.country]"]